 // ----------------------------------------------------------------------------
 // AdvancedSocket aims to help handling connectivity issues from the client side when using ColdFusion WebSocket solution.
 // v1.0.1 - released 2016-09-17 01:13
 // Created setTimer() function that handles setting the timer amount against the online or offline amount. Moved out of funciton into eventListeners so user's do not forget to copy when overwriting the connected() or disconnected() functions.
 // Licensed under the MIT license.
 // https://github.com/GiancarloGomez/AdvancedSocket
 // ----------------------------------------------------------------------------
 // Copyright (C) 2013-2016 Giancarlo Gomez
 // http://giancarlogomez.com
 // ----------------------------------------------------------------------------

var AdvancedSocket={autoConnect:JSON.parse(document.body.dataset.autoConnect||!0),name:document.body.dataset.name||"ws",channels:document.body.dataset.channels?document.body.dataset.channels.split(","):[],clientID:0,clientInfo:{},doMessage:document.body.dataset.doMessage||"doMessage",timer:0,pingURL:document.body.dataset.pingUrl||"",onlineTimer:1e3*(parseFloat(document.body.dataset.onlineTimer)||30),offlineTimer:1e3*(parseFloat(document.body.dataset.offlineTimer)||5),reconnectTimer:1e3*(parseFloat(document.body.dataset.reconnectTimer)||.5),timerCount:0,debug:JSON.parse(document.body.dataset.debug||!1),statusLabel:document.getElementById(document.body.dataset.statusDiv||"status-message"),init:function(){AdvancedSocket.doLog("AdvancedSocket : init"),window.addEventListener("connectionerror",function(a){AdvancedSocket.doLog("AdvancedSocket : Event","connectionerror",a),AdvancedSocket.setTimer(!1),AdvancedSocket.disconnected()}),window.addEventListener("goodconnection",function(a){AdvancedSocket.doLog("AdvancedSocket : Event","goodconnection",a),AdvancedSocket.setTimer(!0),AdvancedSocket.connected()}),window.addEventListener("requireconnection",function(a){AdvancedSocket.doLog("AdvancedSocket : Event","requireconnection",a),AdvancedSocket.forceReconnect()}),window.addEventListener("offline",function(a){AdvancedSocket.setTimer(!1),AdvancedSocket.disconnected(),clearTimeout(AdvancedSocket.timer),AdvancedSocket.doLog("AdvancedSocket : Event","offline",a)},!1),window.addEventListener("online",function(a){AdvancedSocket.doLog("AdvancedSocket : Event","online",a),AdvancedSocket.checkConnection()},!1),AdvancedSocket.timerCount=AdvancedSocket.onlineTimer,AdvancedSocket.checkConnection()},checkConnection:function(){clearTimeout(AdvancedSocket.timer),navigator.onLine&&""!==AdvancedSocket.pingURL&&AdvancedSocket.autoConnect&&(AdvancedSocket.doLog("AdvancedSocket : checkConnection"),AdvancedSocket.timer=setTimeout(function(){AdvancedSocket.ping(AdvancedSocket.pingURL)},AdvancedSocket.timerCount))},fireEvent:function(a,b){var c=document.createEvent("Event");c.initEvent(a,!0,!0),c.data=b,window.dispatchEvent(c)},ping:function(a){AdvancedSocket.doLog("AdvancedSocket : ping");var b=new XMLHttpRequest,c=setTimeout(function(){b.abort(),AdvancedSocket.fireEvent("connectiontimeout",{})},5e3);b.onreadystatechange=function(){4===b.readyState&&(200===b.status?(JSON.parse(b.response).success===!0?AdvancedSocket.fireEvent("goodconnection",{}):AdvancedSocket.fireEvent("requireconnection",{}),clearTimeout(c)):AdvancedSocket.fireEvent("connectionerror",{}),AdvancedSocket.checkConnection())},b.open("GET",a+"?id="+AdvancedSocket.clientID+"&ts="+(new Date).getTime()),b.send()},onMessage:function(a){AdvancedSocket.doLog("AdvancedSocket : onMessage",a.type,a.reqType,a),"welcome"===a.reqType&&(AdvancedSocket.clientID=a.clientid,AdvancedSocket.connecting()),"authenticate"===a.reqType&&(a.code===-1?AdvancedSocket.doLog("Authentication failed"):0===a.code&&(AdvancedSocket.connectWS(),AdvancedSocket.autoConnect=!0,AdvancedSocket.checkConnection()),AdvancedSocket.connected()),"subscribe"===a.reqType&&AdvancedSocket.connected(),"data"===a.type&&("FORCE-RECONNECT"===a.data&&window.setTimeout(AdvancedSocket.forceReconnect,AdvancedSocket.reconnectTimer),AdvancedSocket.doMessage&&"function"==typeof window[AdvancedSocket.doMessage]?window[AdvancedSocket.doMessage](a):AdvancedSocket.doLog("AdvancedSocket : Create a doMessage function and pass it in the data-do-message attribute of the body"))},onOpen:function(a){AdvancedSocket.doLog("AdvancedSocket : onOpen",a),window.AdvancedSocket.clientInfo.username&&AdvancedSocket.autoConnect&&(AdvancedSocket.autoConnect=!1,window[AdvancedSocket.name].authenticate(window.AdvancedSocket.clientInfo.username,"")),AdvancedSocket.getIPInfo()},onClose:function(a){AdvancedSocket.doLog("AdvancedSocket : onClose",a)},onError:function(a){AdvancedSocket.doLog("AdvancedSocket : onError",a)},getIPInfo:function(){AdvancedSocket.doLog("AdvancedSocket : getIPInfo"),window.jQuery&&!AdvancedSocket.clientInfo.status&&"https:"!==location.protocol?$.getJSON("http://ip-api.com/json/",function(a){AdvancedSocket.clientInfo=a,AdvancedSocket.clientInfo.userAgent=navigator.userAgent,AdvancedSocket.autoConnect&&AdvancedSocket.connectWS()}):AdvancedSocket.autoConnect&&AdvancedSocket.connectWS()},connectWS:function(){AdvancedSocket.doLog("AdvancedSocket : connectWS"),AdvancedSocket.channels.forEach(function(a,b){AdvancedSocket.doLog("AdvancedSocket : Connecting to "+a+" : "+(b+1)+" of "+AdvancedSocket.channels.length);var c={clientInfo:window.AdvancedSocket.clientInfo};window.AdvancedSocket.clientInfo.username&&(c.username=window.AdvancedSocket.clientInfo.username),window[AdvancedSocket.name].subscribe(a,c)})},forceReconnect:function(){AdvancedSocket.doLog("AdvancedSocket : forceReconnect"),window[AdvancedSocket.name].closeConnection(),window[AdvancedSocket.name].openConnection()},setTimer:function(a){AdvancedSocket.doLog("setTimer",a),a===!1?AdvancedSocket.timerCount=AdvancedSocket.offlineTimer:AdvancedSocket.timerCount!==AdvancedSocket.onlineTimer&&(AdvancedSocket.timerCount=AdvancedSocket.onlineTimer)},disconnected:function(){AdvancedSocket.doLog("AdvancedSocket : disconnected"),AdvancedSocket.statusLabel&&(AdvancedSocket.statusLabel.className="alert alert-danger text-center",AdvancedSocket.statusLabel.innerHTML="We are disconnected!!!")},connecting:function(){AdvancedSocket.doLog("AdvancedSocket : connecting"),AdvancedSocket.statusLabel&&(AdvancedSocket.statusLabel.className="alert alert-warning text-center",AdvancedSocket.statusLabel.innerHTML="We are connecting ...")},connected:function(){AdvancedSocket.doLog("AdvancedSocket : connected"),AdvancedSocket.statusLabel&&(AdvancedSocket.statusLabel.className="alert alert-success text-center",AdvancedSocket.statusLabel.innerHTML="We are connected!!!")}};AdvancedSocket.doLog=AdvancedSocket.debug===!0&&window.console?console.log.bind(window.console):function(){},AdvancedSocket.init();